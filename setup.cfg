[metadata]
name = synthesizAR
author = Will Barnes
author_email = will.t.barnes@gmail.com
license = BSD 3-Clause
license_file = LICENSE.rst
url = https://github.com/wtbarnes/synthesizAR
description = A Python package for forward-modeling optically-thin emission from field-aligned coronal loop models
long_description = file: README.md

[options]
zip_safe = False
packages = find:
python_requires = >=3.8
setup_requires = setuptools_scm
include_package_data = True
install_requires =
    astropy>=4.3  # first version that includes u.DN; remove when sunpy pins > 4.2
    scipy
    matplotlib
    sunpy[all]>=4.1
    zarr
    asdf
    ndcube>=2.0

[options.extras_require]
aia =
    aiapy
xrt =
    xrtpy @ git+https://github.com/HinodeXRT/xrtpy.git@main
atomic =
    plasmapy[theory]
    fiasco @ git+https://github.com/wtbarnes/fiasco.git@main
hydrad =
    pydrad @ git+https://github.com/rice-solar-physics/pydrad.git@master
parallel =
    dask[complete]
    distributed
test =
    tox
    flake8
    pytest
    pytest-astropy
    pytest-cov
docs =
    astroquery
    xrtpy @ git+https://github.com/HinodeXRT/xrtpy.git@main
    sphinx
    sphinx-astropy
    sphinx-automodapi
    towncrier
    sphinx_rtd_theme

[options.package_data]
synthesizAR.instruments = data/*.json, data/*.asdf

[tool:pytest]
testpaths = "synthesizAR" "docs"
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst
remote_data_strict = True

[coverage:run]
omit =
  synthesizAR/_astropy_init*
  synthesizAR/conftest.py
  synthesizAR/*setup_package*
  synthesizAR/tests/*
  synthesizAR/*/tests/*
  synthesizAR/extern/*
  synthesizAR/version*
  */synthesizAR/_sunpy_init*
  */synthesizAR/conftest.py
  */synthesizAR/*setup_package*
  */synthesizAR/tests/*
  */synthesizAR/*/tests/*
  */synthesizAR/extern/*
  */synthesizAR/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_
